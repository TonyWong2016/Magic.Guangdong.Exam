@page
@model Magic.Guangdong.Exam.Client.Pages.Order.DetailModel
@{
}
<main class="container">
    <article>
        <header>支付报名费用</header>
        <form action="/order/alipay/pagepay" method="post" target="_blank">
           
            <label>报名科目</label>
            <input type="text" readonly class="disabled" id="Subject" value="" />

            <label>报名费用</label>
            <input type="text" readonly class="disabled" id="TotalAmount" value="" />
         

            <label>订单号</label>
            <input type="text" readonly class="disabled" id="orderTradeNumber" name="orderTradeNumber" value="" />
            @Html.AntiForgeryToken()
            <div class="grid" id="payDiv">
                <input type="button" class="pico-background-green-400" style="border-color:aliceblue" value="微信支付" />
                <input type="submit" id="pay" class="pico-background-blue-600" style="border-color:aliceblue" value="支付宝支付" />
                
            </div>
            <div>
                <a href="javascript:;" onclick="AlipayOrderQuery()">支付成功后没自动跳转?</a>
            </div>
            <input id="errorBtn" type="button" disabled class="pico-background-red-600" style="border-color:aliceblue;display:none" value="参数异常" />
        </form>
        
    </article>
</main>
<script>
    let orderId = getUrlQueryParams('id');
    let outTradeNo = '';
    //两个参数不能同时为空
    if (!orderId) {
        TT.error('参数异常');
        $('.grid').remove();
        $('#errorBtn').show();
    }
    
    orderId = atob(decodeURIComponent(orderId));
    axios.get('/myorder/GetOrderDetail', {
        params: {
            orderId: orderId
        }
    }).then(data => {
        let json = data.data;
        if (json.code !== 0) {
            location.href = json.data.url;
            return;
        }
        if (json.data.status != 1) {
            TT.error('当前订单不可支付');
            $('.grid').remove();
            $('#errorBtn').val('当前订单不可支付').show().click(() => {
                location.href = '/report/index';
            });
            return;
        }
        let examModel = json.data;
        jValSet('Subject', examModel.subject);
        jValSet('TotalAmount', examModel.expenses);
        jValSet('orderTradeNumber', examModel.outTradeNo);
    })


    function AlipayOrderQuery() {
        if (jVal('orderTradeNumber')) {
            let outTradeNo = jVal('orderTradeNumber')
            setTimeout(async () => {
                let formData = new FormData();
                formData.append('__RequestVerificationToken', requestToken);
                formData.append('OutTradeNo', outTradeNo)

                let json = await request('POST', '/order/alipay/query', formData, CT);
                //$('#checking').hide();
                if (json.code != 0) {
                    TT.error('订单异常');
                    return;
                }
                if (json.data && json.data.trade_status == 'TRADE_SUCCESS') {
                    $('#success').show();
                    location.href = '/report/detail?orderconfirm=yes&outTradeNo=' + outTradeNo
                    return
                }
                TT.error('订单异常');
            })
        } else{
            TT.error('没有检测到订单号');
        }
        
    }
</script>
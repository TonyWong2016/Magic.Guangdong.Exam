@{
    Layout = "../Shared/_LayoutContent.cshtml";
}

<div class="layui-row" style="padding:15px">
    <form class="layui-form">
        <div class="layui-form-item layui-btn-group">
            <a href="@Url.Action("Create")" class="layui-btn" id="btnAddQuestion"><i class="layui-icon layui-icon-add-1"></i>新增题目</a>
            <a href="/exam/subject/index" class="layui-btn" id="btnSubject"><i class="layui-icon layui-icon-read"></i>新增科目</a>
            <a href="/exam/questiontype/index" class="layui-btn" id="btnType"><i class="layui-icon layui-icon-star"></i>新增题型</a>
            <a href="javascript:;" class="layui-btn layui-btn-normal" id="btnUpload"><i class="layui-icon layui-icon-upload"></i>导入题库</a>

        </div>

        <div class="layui-form-item">
            <div class='layui-input-inline' style='width:360px'>
                <select id='ActivityId' lay-filter='ActivityId'>
                    <option value='0'>请选择所属活动</option>
                </select>
            </div>

            <div class="layui-input-inline">
                <input class="layui-input" id="keyword" placeholder="输入关键字检索" />
            </div>

            <div class="layui-input-inline">
                <select id="SubjectId" lay-filter="SubjectId" class="layui-select" lay-search>
                    <option value="0">请选择科目</option>
                </select>
            </div>

            <div class="layui-input-inline">
                <select id="TypeId" lay-filter="TypeId" class="layui-select">
                    <option value="0">请选择题目类型</option>
                </select>
            </div>

            <div class="layui-input-inline">
                <select id="Degree" lay-filter="Degree" class="layui-select">
                    <option value="all">请选择题目难度</option>
                    <option value="easy">容易</option>
                    <option value="normal">普通</option>
                    <option value="difficult">困难</option>
                </select>
            </div>
        </div>
        
    </form>
    <table id="table" class="layui-table" lay-filter="table"></table>
</div>

<div class="layui-layer-notice" style="display:none" id="divUpload">
    <div class="layui-row" style="padding:30px">
        <blockquote class="layui-elem-quote">
            注意，通过excel上传时，只能上传客观题，有素材的题目，可以在上传完成后，再到后台挂载素材；
            <br />
            <b style="color:red">选项中不要包含“放弃”之类的选项，因为有不同的评分标准，而评分标准对选错和不答的评分规则也不一样，这里如果包含了【放弃】选项，系统可能会判为错误而不是“放弃”不答，用户的实际意图应该是放弃该题目而不是答错。为了避免这种冲突，上传的选项里不要包含无意义的值</b>
            </blockquote>
        <div class="layui-col-md6" style="padding:30px">
            <div class="layui-panel">
                <div style="padding: 30px; text-align:center" id="btnUploadFromWord">
                    <img src="~/images/word.png" style="cursor:pointer;" title="上传word题库" />
                </div>
            </div>
            <p style="text-align:center;margin-top:10px;"><a href="/tamplate/word格式题库导入模板.docx" target="_blank" style="color:#01AAED;text-decoration:underline">下载Word模板</a></p>
        </div>
        <div class="layui-col-md6" style="padding:30px">
            <div class="layui-panel">
                <div style="padding: 30px; text-align:center" id="btnUploadFromExcel">
                    <img src="~/images/excel.png" style="cursor:pointer;" title="上传excel题库" />
                    </div>
            </div>
            <p style="text-align:center;margin-top:10px;color:#01AAED"><a href="javascript:;" onclick="GenerationImportTemplate()" style="color:#01AAED;text-decoration:underline">下载Excel模板</a></p>
        </div>
    </div>
</div>


<div class="layui-panel  layui-bg-gray" id="divUploadMaterial" style="display:none;padding:30px;">
    <div class="layui-card">
        <div class="layui-card-body">
            <form class="layui-form" lay-filter="uploadForm">
                <div class="layui-form-item">
                    <label class="layui-form-label">素材归属</label>
                    <div class="layui-input-block">
                        <input class="layui-input" id="questionTitle" readonly/>
                    </div>
                </div>
                <div class="layui-form-item" style="display:none">
                    <label class="layui-form-label">素材归属</label>
                    <div class="layui-input-block">
                        <select id="materialSelectView" lay-filter="materialSelectView">
                            <option value="Question">题目-配图</option>
                            <option disabled>选项素材请进入到详情页进行上传</option>
                        </select>
                    </div>
                </div>
                <div class="layui-form-item  layui-col-space10">
                    <label class="layui-form-label">路径</label>
                    <div class="layui-col-md5">
                        <input type="text" class="layui-input" id="fileUrl" placeholder="输入网络地址或者上传素材" />
                        <input type="hidden" id="fileId" />
                    </div>
                    <div class="layui-col-md3">
                        <a class="layui-btn layui-btn-primary layui-border-blue" href="javascript:;" id="btnUploadMaterial"><i class="layui-icon layui-icon-upload-circle"></i>上传</a>
                        <a class="layui-btn layui-btn-primary layui-border-blue" href="javascript:;" id="btnAddMaterial" onclick="AddMaterial()"><i class="layui-icon layui-icon-release"></i>确定添加</a>

                    </div>

                </div>
                <div class="layui-form-item">
                    <blockquote class="layui-elem-quote">
                        <b style="color:red">列表页只能上传题目素材，如果要上传选项素材，请先进入到编辑页后，再进行操作;<br />
                            注意如果答案均为图片，请先给出题目的选项，选项内容可以设置为“如图”，然后再绑定素材即可，不要设置成空选项！</b><br />                        支持使用网络图片，也可以点击右侧按钮上传，完成后点击【确定添加】按钮即可完成素材绑定;
                        <br />
                        为了避免客户端答题因为图片素材造成显示错乱，每种类别上传的素材数量建议不要超过1个，比如题目传1个图，每个选项最多只传1个。
                    </blockquote>
                </div>
            </form>
        </div>

        <div class="layui-card-body">
            <div class="layui-row" style="text-align:center" id="materialItemView">
            </div>
        </div>
    </div>

</div>


<script type="text/html" id="degreeTpl">
    {{# if(d.degree=="easy") { }}
    容易
    {{# } else if(d.degree=="normal") { }}
    普通
    {{# } else if(d.degree=="difficult") { }}
    困难
    {{# } }}
</script>
<script type="text/html" id="operationTpl">
    @*<a class="layui-btn layui-btn-normal" href=" {{resourceHost + d.templateFileUrl}}" target="_blank">查看</a>*@
    <a class="layui-btn layui-btn-primary layui-border-blue" href="@Url.Action("Edit")?id={{d.id}}">编辑</a>
    <a class="layui-btn layui-btn-primary layui-border-blue" href="javascript:;" onclick="OpenMaterial({{d.id}},'{{d.titleText}}')">素材</a>

    <a class="layui-btn layui-btn-primary layui-border-red" href="javascript:;" onclick="deleteQuestion('{{d.id}}')">删除</a>

</script>

<script type="text/html" id="materialItemTpl">
    {{# layui.each(d,function(index, item){ }}
    <div class="layui-col-md3">
        <img class="layui-row" src="{{item.imgUrl}}?width=200" />
        <div class="layui-row" style="justify-content:space-between">
           <a href="{{item.imgUrl}}" target="_blank" style="font-size:medium"> {{item.imgTitle}} </a>
           <a href="javascript:;" onclick="removeMaterial({{item.id}})" title="删除配图"> <i class="layui-icon layui-icon-close layui-border-red"></i></a>
       </div>
    </div>
     {{# }) }}
</script>

<script src="~/web/myfcup.js"></script>
<script>
    let form = layui.form;
    let table = layui.table;
    let token = $('@Html.AntiForgeryToken()').val();
    let subjectId=0;
    let typeId=0;
    let activityId = 0;
    let degree = 'all';
    //form.render('select');
    let fileConnObj = {};


    getSelectItems('/report/activity/getactivitydrops', { rd: randomInt }, 'selectTpl', 'ActivityId', true)
    getSelectItems('/exam/subject/GetSubjectSelects', {}, 'selectTpl', 'SubjectId', true)
    getSelectItems('/exam/questiontype/GetQuestionTypeSelects', {}, 'selectTpl', 'TypeId', true)

    let whereJsonStr;

    
    getQuestions();
    function getQuestions(rd=0) {
        makeWhereJson();
        let params = {
            url: '@Url.Action("GetQuestions")',
            elem: '#table',
            where: { 'whereJsonStr': JSON.stringify(whereJsonStr), 'rd': rd },
            size: 'lg',
            page: true,
            cols: [ //表头
                { title: '序号', templet: '#indexTpl', width: '6%' }
                , { field: 'id', title: 'id', hide: true }
                , { field: 'titleText', title: '题目', width: '30%' }
                , { field: 'type', title: '题型', width: '8%' }
                , { field: 'subject', title: '科目', width: '10%' }
                , { field: 'score', title: '分值', width: '8%' }
                , { templet: '#degreeTpl', title: '难度', width: '8%' }
                , { field: 'createdAt', title: '创建时间', width: '12%' }
                , { title: '操作', templet: '#operationTpl' }
            ],
            height: 630,
            nomsg: true //不在弹出提示
        };
        getTable(params);
    }

    autoSearch('keyword', function () {
        makeWhereJson();
        getQuestions();
    })

    $('#btnUpload').click(function(){
        openDiv('上传题库', 'divUpload', '60%', '85%', false)
    })

    initUploadFile('btnUploadFromExcel', 'xls|xlsx', '', async function (res) {
        //console.log(res);
        layer.msg('导入时长和您实际上传的数据量相关，请稍后', { icon: 0 })
        layer.load(1);

        let formData = new FormData();
        formData.append('path', res.data);
        formData.append('__RequestVerificationToken', requestToken);
        var ret = await request('POST', '@Url.Action("ImportQuestionFromExcel")', formData, { 'Content-Type': 'multipart/form-data' });
        if (ret.code == 0) {
            successMsg('导入成功', () => {
                layer.closeAll();
                getQuestions(new Date().getTime());
            });
            return;
        }
        errorMsg('创建失败')
        
    })

    initUploadFile('btnUploadFromWord', 'doc|docx', '',async function (res) {
        
        if (subjectId == 0 || subjectId == '0') {
            layer.alert('word格式的试题需要选择默认科目，请到菜单页选择一下科目',{icon:0});
            return;
        }

        layer.msg('导入时长和您实际上传的数据量相关，请稍后', { icon: 0 })
        layer.load(1);

      

        let formData = new FormData();
        formData.append('path', res.data);
        formData.append('subjectId', subjectId);
        formData.append('__RequestVerificationToken', requestToken);
        var ret = await request('POST', '@Url.Action("ImportQuestionFromWord")', formData, { 'Content-Type': 'multipart/form-data' });
        if (ret.code == 0) {
            successMsg('导入成功', () => {
                layer.closeAll();
                getQuestions(new Date().getTime());
            });
            return;
        }
        errorMsg('创建失败')
    })


    form.on('select(TypeId)', function (data) {
        typeId=data.value
        getQuestions();
    })

    form.on('select(SubjectId)', function (data) {
        subjectId = data.value
        getQuestions();
    })

    form.on("select(ActivityId)", data => {
        activityId = data.value;
        getQuestions();
    })

    form.on('select(Degree)',function(data){
        degree=data.value;
        getQuestions();
    })

    function makeWhereJson(){
        whereJsonStr = {
            'Logic': 'And',
            'Filters': [{
                'Field': 'IsDeleted',
                'Operator': 'Equal',
                'Value': 0
            }]
        };
       
        if (typeId != '0') {
            whereJsonStr.Filters.push({
                'Field': 'TypeId',
                'Operator': 'Equal',
                'Value': typeId
            });
        }
        if (subjectId != '0') {
            whereJsonStr.Filters.push({
                'Field': 'SubjectId',
                'Operator': 'Equal',
                'Value': subjectId
            });
        }
        if (activityId != '0') {
            whereJsonStr.Filters.push({
                'Field': 'ActivityId',
                'Operator': 'Equal',
                'Value': activityId
            });
        }
        if(degree !='all'){
            whereJsonStr.Filters.push({
                'Field': 'Degree',
                'Operator': 'Equal',
                'Value': degree
            });
        }

        if (jVal('keyword')) {
            whereJsonStr.Filters.push({
                'Field': 'Title',
                'Operator': 'Contains',
                'Value': jVal('keyword')
            });
        }
        return whereJsonStr;
    }

     function deleteQuestion(id){
        layer.confirm('删除题目前，需要确保要删除的题目没有被试卷抽中。<br /><b style="color:red">注意：题目是宝贵的数据资源，应予以保护，并避免题目答案外泄，删除前请确保相关管理人员均已知晓！</b><br /> 确定要删除当前题目吗？', { icon: 0 }, async function (index) {
            layer.close(index);
            let formData = new FormData();
            formData.append('__RequestVerificationToken', requestToken);
            formData.append('id', id);
            var ret = await request('POST', '@Url.Action("Delete")', formData, { 'Content-Type': 'multipart/form-data' });
            if (ret.code == 0) {
                getQuestions(new Date().getTime());
                successMsg('删除成功');
                return;
            }  
            errorMsg('操作失败：' + ret.msg);

        })
        
    }

    async function GenerationImportTemplate() {
        // $.post('@Url.Action("GenerationImportTemplate")', { '__RequestVerificationToken': token },function(json){
        //     if(json.code==1){
        //         window.open(json.data);
        //     }
        // })
        layer.load(2);
        let formData = new FormData();
        formData.append('__RequestVerificationToken', requestToken);
        //let formData = objectToFormData(json);
        var ret = await request('POST', '@Url.Action("GenerationImportTemplate")', formData, { 'Content-Type': 'multipart/form-data' });
        layer.closeAll('loading');
        if (ret.code == 0) {
            successMsg('下载即将开始...', () => {
                window.open(ret.data);
            });
            return;
        }
        errorMsg('创建失败')
    }

    let currQuestionId = 0;

    //打开素材弹窗 & 获取素材
    function OpenMaterial(questionId, text) {
       currQuestionId = questionId;
       GetMaterials();
       renderMaterialSelect()
       $('#questionTitle').val(text)
       openDiv('素材管理', 'divUploadMaterial', '70%', '70%',false);
    }

    function GetMaterials(){
        $.getJSON('/material/material/getmaterials',{'connId':currQuestionId,'connName':'Question','rd':randomInt},function(json){
            renderTpl('materialItemTpl', 'materialItemView',json.data, false);
        })
    }

    //添加素材
    async function AddMaterial() {
        // openDiv('素材管理', 'divUpload', '70%', '70%',false);
        if(!$('#fileUrl').val()){
            errorMsg('请先选择或者上传素材');
            return;
        }
        let link=$('#fileUrl').val();
        if(!fileConnObj.id && !link.startsWith('http')){
            errorMsg('素材格式不合法');
            return;
        }
        fileConnObj.ConnId=currQuestionId;
        fileConnObj.ConnName='Question';
        fileConnObj.Link=$('#fileUrl').val();
        fileConnObj.Remark = $('#materialSelectView option:selected').text();
        fileConnObj.__RequestVerificationToken = requestToken;
        let formData = objectToFormData(fileConnObj);
        var ret = await request('POST', '/material/material/BindMaterial', formData, { 'Content-Type': 'multipart/form-data' });
        if (ret.code == 0) {
            renderTpl('materialItemTpl', 'materialItemView',
            [{
                imgUrl: $('#fileUrl').val(),
                imgTitle: fileConnObj.Remark
            }],
            true);
            successMsg('保存成功');
             refreshRandomInt();
            $('#fileUrl').val('')
            return;
        }
        errorMsg('保存失败')
    }

    //移除素材
    function removeMaterial(fileId) {
        layer.confirm('确定要删除该素材吗?', { icon: 0 }, async(index)=> {
            let formData = objectToFormData({id:fileId,realDel:0,__RequestVerificationToken : requestToken});
            var ret = await request('POST', '/material/material/RemoveMaterial', formData, { 'Content-Type': 'multipart/form-data' });
             if (ret.code == 0) {
                 successMsg('移除成功');
                 refreshRandomInt();
                 GetMaterials();
                 layer.close(index);
             }
        })
    }

    //上传并渲染素材选择选项
    function renderMaterialSelect(){
        
        let uploadObj = {
            'elemId':'btnUploadMaterial',
            'callback':function(data){
                $('#fileId').val(data.extenddata.id);
                if (data.data.startsWith('http'))
                    $('#fileUrl').val(data.data);
                else
                    $('#fileUrl').val(`${location.protocol}//${location.host}${data.data}`);
                fileConnObj.Id = data.extenddata.id;
            }
        }
        initUploadFilePro(uploadObj)
    }
</script>



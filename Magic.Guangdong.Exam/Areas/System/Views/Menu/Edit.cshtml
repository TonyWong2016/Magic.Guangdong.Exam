@{
    Layout = "../Shared/_LayoutContent.cshtml";
}
@model Magic.Guangdong.DbServices.Dtos.System.Menus.MenuDto

<div class="layui-card layui-panel">
    <div class="layui-card-header" style="color:#16baaa;font-size:large">
        @ViewData["title"]
    </div>
    <div class="layui-card-body">
        <form class="layui-form main-form" lay-filter="menu-form">
            <div class="layui-form-item">
                <label class="layui-form-label"><span class="layui-badge-dot"></span> 标题</label>
                <div class="layui-input-block">
                    <input class="layui-input" asp-for="Name" placeholder="请输入菜单标题" />
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">描述</label>
                <div class="layui-input-block">
                    <textarea class="layui-textarea" asp-for="Description" placeholder="请简要描述栏目功能"></textarea>
                </div>
            </div>

            <div class="layui-form-item">
                <label class="layui-form-label"><span class="layui-badge-dot"></span> 父级菜单</label>
                <div class="layui-input-block">
                    <div id="menuView">
                    </div>
                </div>
            </div>

            <div class="layui-form-item childtype">
                <label class="layui-form-label">状态</label>
                <div class="layui-input-block">
                    <input type="checkbox" lay-filter="_status" id="_status" lay-text="可用|禁用" lay-skin="switch">
                    <blockquote class="layui-elem-quote" style="margin-top:10px">禁用状态的菜单是不可见的</blockquote>
                </div>
            </div>

            <div class="layui-form-item childtype">
                <label class="layui-form-label">叶子节点</label>
                <div class="layui-input-block">
                    <input type="checkbox" lay-filter="_isLeef" id="_isLeef" lay-text="是|否" lay-skin="switch">
                    <blockquote class="layui-elem-quote" style="margin-top:10px">叶子节点才可以绑定路由访问路径</blockquote>
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label"><span class="layui-badge-dot"></span> 排序</label>
                <div class="layui-input-block">
                    <input class="layui-input" type="number" lay-affix="number" step="1" min="0" max="1000000" asp-for="OrderIndex" placeholder="请输入菜单排序" />
                    <blockquote class="layui-elem-quote" style="margin-top:10px">影响菜单排布的属性，数字越小越靠前</blockquote>

                </div>
            </div>
            <div id="divProp" class="leafAttrs" style="display:none">
                <div class="layui-form-item">
                    <label class="layui-form-label"><span class="layui-badge-purple"></span> 路由地址</label>
                    <div class="layui-input-block">
                        <div id="routerView">
                        </div>
                    </div>

                </div>
            </div>

            <div class="layui-form-item">
                <div class="layui-input-block">
                    <a class="layui-btn" lay-submit lay-filter="form-submit">立即提交</a>
                    <a class="layui-btn layui-btn-primary" href="index">返回</a>
                </div>
            </div>
            <input type="hidden" asp-for="IsLeef" />
            <input type="hidden" asp-for="Status"/>
            <input type="hidden" asp-for="ParentId"/>
            <input type="hidden" asp-for="Depth"/>
            <input type="hidden" asp-for="PermissionId"/>
            <input type="hidden" asp-for="Router"/>
            <input type="hidden" asp-for="CreatorId"/>
            <input type="hidden" asp-for="Id"/>
            @Html.AntiForgeryToken()
        </form>
    </div>
</div>

<script src="~/plugins/xm-select.js"></script>

<script>
    $('#CreatorId').val(atob(getCookie('userId')));
    let menus;
    let routers;
    let form = layui.form;
    let formParams = {};
    axios.get('/system/menu/getmenus')
        .then(json => {
            let menuArr = listToTree(json.data.data);
            
            menus = xmSelect.render({
                el: '#menuView',
                filterable: true,
                direction: 'down',
                theme: {
                    color: '#16baaa',
                },
                prop: {
                    name: 'name',
                    value: 'id'
                },
                radio: true,
                clickClose: true,
                toolbar: {
                    show: false,
                },
                tree: {
                    show: true,
                    showFolderIcon: true,
                    strict: false,
                },
                data: menuArr,
                on: function (data) {
                     console.log(data);
                    form.val('menu-form', { 'ParentId': 0 });
                    if (data.isAdd) {
                        form.val('menu-form', { 'ParentId': data.arr[0].id, 'Depth': data.arr[0].depth + 1 });
                    } else{
                        form.val('menu-form', { 'ParentId': 0, 'Depth': 0 });
                    }
                    if (data.change[0].id == $('#Id').val()) {
                        menus.warning();
                        layer.msg('不可以将父级菜单设置为自己', { icon: 0 }, function () {
                            menus.warning();
                            menus.setValue([]);
                        });
                    }
                    if (data.change[0].isLeef == 1) {
                        menus.warning();
                        warnMsg('当前节点已经是叶子节点，不可以在添加子节点', () => {
                            menus.warning();
                            menus.setValue([]);
                        });
                    }
                }
            })
        }).then(() => {
            initEditData();
        });

    

    form.on('submit(form-submit)', async function (data) {
        var field = data.field;
        delete field.select;
        console.log(field)
       
        let formData = objectToFormData(field);
        try {
            const result = await request('POST', '/system/menu/Edit', formData, { 'Content-Type': 'multipart/form-data' });
            if (result.code == 0) {
                successMsg('保存成功', () => {
                    refreshRandomInt();
                    parent.location.reload();
                });
               
            }
            return false;
        } catch (error) {
            //console.error('Error sending form data:', error);
            errorMsg('操作失败，请稍后重试');
        }
        return false;
    })

    form.on('switch(_isLeef)', function (data) {
        form.val('menu-form', { 'IsLeef': 0 });
        $('.leafAttrs').hide();
        if (data.elem.checked) {
            form.val('menu-form', { 'IsLeef': 1 });
            renderPermission();
        }else{
        }
    });

    form.on('switch(_status)', function (data) {
        form.val('menu-form', { 'Status': 0 });
        $('.leafAttrs').hide();
        if (data.elem.checked) {
            form.val('menu-form', { 'Status': 1 });
        }
    });
    
    function initEditData(){
        if ($('#IsLeef').val() == '1') {
            $('#_isLeef').attr('checked', 'checked')
            renderPermission().then(() => {
                routers.setValue([$("#PermissionId").val()])
            })
        } else {
            form.val('menu-form',
                {
                    'PermissionId': 0,
                    'Router': '-'
                }
            );
        }
        if ($('#Status').val() == '1') {
            $('#_status').attr('checked', 'checked')
            
        }
        if (!$('#Router').val()) {
            $('#Router').val('-')
        }
        if ($('#ParentId').val()) {
            menus.setValue([$('#ParentId').val()])
            menus.update()
        }
        renderLayuiFormElem('checkbox');

    }

    function renderPermission() {
        if (routers && routers.getValue().length > 0) {
            $('.leafAttrs').show();
            routers.setValue([])
            return;
        }
        return  axios.get('/system/Permission/GetPermissions', {
            params: {
                rd: randomInt
            }
        })
            .then(json => {
                console.log(json.data)
                routers = xmSelect.render({
                    el: '#routerView',
                    filterable: true,
                    radio: true,
                    clickClose: true,
                    tips: '如果没有合适的地址，请联系开发同学添加',
                    direction: 'down',
                    theme: {
                        color: '#16baaa',
                    },
                    prop: {
                        name: 'description',
                        value: 'id'
                    },
                    data: json.data.data,
                    on: function (router) {
                        console.log(router);
                        
                        let _router = '-';
                        form.val('menu-form', { 'PermissionId': 0, 'Router': _router });
                        if (router.isAdd) {
                            let match = router.arr[0].description.match(/（([^）]+)/);
                            if (match) {
                                _router = match[1];
                            }
                            form.val('menu-form',
                                {
                                    'PermissionId': router.arr[0].id,
                                    'Router': _router
                                });

                        }
                        else {
                            form.val('menu-form',
                                {
                                    'PermissionId': 0,
                                    'Router': '-'
                                }
                            );
                        }
                    }
                })
            }).then(ret => {
                $('.leafAttrs').show();
            })
    }


</script>
